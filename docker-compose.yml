services:
  # ── Milvus ─────────────────────────────────────────────────────────────────
  milvus:
    image: milvusdb/milvus:v2.4.23
    container_name: milvus
    command: ["milvus", "run", "standalone"]
    restart: unless-stopped
    environment:
      TZ: America/New_York
      ETCD_USE_EMBED: "true"
      COMMON_STORAGETYPE: local
      MILVUS_MEMORY_LIMIT: 2Gi
    ports:
      - "19530:19530"
      - "9091:9091"
    volumes:
      - milvus_data:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      timeout: 5s
      retries: 3

  # ── One-shot DB initialiser ───────────────────────────────────────────────
  init-db:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    container_name: init-db
    depends_on:
      milvus:
        condition: service_healthy
    environment:
      MILVUS_HOST: milvus
      MILVUS_PORT: "19530"
    volumes:
      - ./data:/app/data
    command: |
      bash -c '
        checksum=$$(sha1sum /app/data/*.txt | sha1sum)
        if [ "$$checksum" != "$$(cat /app/.data.sha 2>/dev/null)" ]; then
          echo "Data changes detected – rebuilding vectors..."
          python vectorstore.py && echo "$$checksum" > /app/.data.sha
        else
          echo "Vectors up-to-date, skipping rebuild."
        fi
      '

  # ── Ollama ────────────────────────────────────────────────────────────────
  ollama:
    image: ollama/ollama-custom
    container_name: ollama
    build:
      context: .
      dockerfile: Dockerfile.ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    volumes:
      - ./ollama-models:/root/.ollama

  # ── FastAPI ───────────────────────────────────────────────────────────────
  fastapi:
    build: .
    container_name: fastapi
    restart: unless-stopped
    depends_on:
      milvus:
        condition: service_healthy
      init-db:
        condition: service_completed_successfully
      ollama:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
    environment:
      MILVUS_HOST: milvus
      MILVUS_PORT: "19530"
      LLM_HOST: ollama
      LLM_PORT: "11434"
    volumes:
      - ./data:/app/data
    ports:
      - "8000:8000"

volumes:
  milvus_data:
